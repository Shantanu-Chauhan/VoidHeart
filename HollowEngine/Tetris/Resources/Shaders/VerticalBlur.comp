#version 430
layout (local_size_x = 1, local_size_y = 128, local_size_z = 1) in;

uniform blurKernel {float weights[101];};
uniform uint blurDistance;

layout (rgba32f) uniform readonly image2D src;
layout (rgba32f) uniform writeonly image2D dst;

// 128 + 2w + 1
// Max w = 50
shared vec4 v[128+100+1];

void main()
{
	// Combo of groupID, groupSize, and localID
	ivec2 gpos = ivec2(gl_GlobalInvocationID.xy);
	// Local thread ID in 128x1 thread group
	uint i = gl_LocalInvocationID.y;
	v[i] = imageLoad(src, gpos+ivec2(0, -blurDistance));
	// Read extra pixels
	if(i < 2 * blurDistance)
	{
		v[i+128] = imageLoad(src, gpos+ivec2(0, 128-blurDistance));
	}

	// Wait for all threads to catch up
	barrier();

	// Apply blur
	vec4 data = vec4(0.0, 0.0, 0.0, 0.0);
	for(uint j = i; j <= (i+2*blurDistance); ++j)
	{
		data += v[j]*weights[j - i];
	}
	// Write to destination image
	imageStore(dst, gpos, data);
}